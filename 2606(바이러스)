#-*- coding:utf-8 -*-
from collections import deque

# 입력받은 노드와 간선으로 그래프 만들기
def Make_Graph():
    global Node_Num, Edge_Num, Edge
    global Graph
    Graph = [[0 for _ in range(Node_Num+1)] for _ in range(Node_Num+1)]
    
    # 양방향 간선이기 때문에 양방향 다 넣어주기
    for i in range(Edge_Num):
        Graph[Edge[i][0]][Edge[i][1]] = 1
        Graph[Edge[i][1]][Edge[i][0]] = 1

# 출력문
def Count_Computer():
    global Edge, Graph, Node_Num
    # BFS 방식으로 수행하기 위해서 큐 실행
    que = deque()
    Check = [0] * (Node_Num+1)
    # 1번을 시작
    que.append(1)
    Check[1] =1
    count = 0

    # 1번과 연결된 노드에서부터 각 노드와 연결된 노드를 큐에 넣으면서 BFS 수행
    while que:
        Check_node = que.popleft()
        for i in range(Node_Num+1):
            if Graph[Check_node][i] == 1 and Check[i] == 0 :
                que.append(i)
                count +=1
                Check[i]= 1 

    return count

Node_Num = int(input())
Edge_Num = int(input())

Edge = [list(map(int, input().split())) for _ in range(Edge_Num)]

Make_Graph()
print(f'{Count_Computer()}')
