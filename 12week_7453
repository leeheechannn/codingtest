#-*- coding:utf-8 -*-
from collections import deque
import sys, copy
input = sys.stdin.readline

def Make_Array():
    global Array, Number
    global Farray, Rarray
    Farray, Rarray = [[], []]

    for i in range(Number):
        for j in range(Number):
            Farray.append(Array[i][0] + Array[j][1])
            Rarray.append(Array[i][2] + Array[j][3])
    Farray.sort()
    Rarray.sort()

def Find_Answer():
    global Farray, Rarray, Number
    max_value = Number*Number
    left = 0
    right = max_value-1

    result = 0
    while left<max_value-1:
        if Farray[left]+Rarray[right] > 0:
            right -= 1
        elif Farray[left]+Rarray[right] < 0:
            left += 1
        elif Farray[left]+Rarray[right] == 0:
            temp = right
            while Farray[left]+Rarray[temp] == 0:
                result += 1
                temp -= 1
            left +=1

    print(f'{result}')


#def Find_Bound():
#    global Farray, Rarray, Number
#    Bound = 0

#    for i in Farray:
#        Lower_Min, Upper_Min = [0, 0]
#        Lower_Max, Upper_Max = [Number*Number-1, Number*Number-1]
#        while Lower_Min < Lower_Max or Upper_Min < Upper_Max:
#            lower_middle = int((Lower_Min + Lower_Max)/2)
#            upper_middle = int((Upper_Min + Upper_Max)/2)
#            if -i <= Rarray[lower_middle] and Lower_Min<Lower_Max:
#                Lower_Max = lower_middle
#            else:
#                Lower_Min = lower_middle +1
#            if -i >Rarray[upper_middle] and Upper_Min < Upper_Max:
#                Upper_Min = upper_middle+1
#            else:
#                Upper_Max = upper_middle

#        if -i == Rarray[Lower_Max] and Upper_Min == Lower_Max:
#            Bound += 1
#        elif -i == Rarray[Lower_Max]:
#            Bound += Upper_Min - Lower_Max
#            #Bound.append(Upper_Min - Lower_Max)
#    print(f'{Bound}')


#def Cal_Zero():
#    global Number, Farray, Rarray
#    count = 0
#    Farray -= Farray
#    for i in range(Number*Number):
#       temp = 0 - Farray[i]
#        if temp in Rarray:
#            count += 1
#
#    return count

Number = int(input())

#Array=[]
Array =[list(map(int, input().rstrip().split())) for _ in range(Number)]

#for _ in range(Number):
#   Array.extend(map(int, input().rstrip().split()))

Make_Array()
#Find_Bound()
#print(f'{Cal_Zero()}')
Find_Answer()
     
-----
#-*- coding:utf-8 -*-
from collections import deque
import sys, copy
input = sys.stdin.readline

def Make_Array():
    global Array, Number
    global Farray, Rarray
    Farray, Rarray = [[], []]

    for i in range(Number):
        for j in range(Number):
            Farray.append(Array[i][0] + Array[j][1])
            Rarray.append(Array[i][2] + Array[j][3])
    Farray.sort()
    Rarray.sort()

def Find_Answer():
    global Farray, Rarray, Number
    max_value = Number*Number
    left = 0
    right = max_value-1

    result = 0
    while left<=max_value-1 and right>=0:
        if Farray[left]+Rarray[right] > 0:
            right -= 1
        elif Farray[left]+Rarray[right] < 0:
            left += 1
        elif Farray[left]+Rarray[right] == 0:
            temp = right
            while Farray[left]+Rarray[temp] == 0 and temp>=0:
                result += 1
                temp -= 1
            left +=1

    print(f'{result}')

Number = int(input())

Array =[list(map(int, input().rstrip().split())) for _ in range(Number)]

Make_Array()
Find_Answer()

--====

#-*- coding:utf-8 -*-
from collections import deque
import sys, copy
input = sys.stdin.readline

def Make_Array():
    global Array, Number
    global Farray, Rarray
    Farray, Rarray = [[], []]

    for i in range(Number):
        for j in range(Number):
            Farray.append(Array[i][0] + Array[j][1])
            Rarray.append(Array[i][2] + Array[j][3])
    Farray.sort()
    Rarray.sort()

def Find_Answer():
    global Farray, Rarray, Number
    max_value = Number*Number
    left = 0
    right = max_value-1

    result = 0
    while left<=max_value-1 and right>=0:
        if Farray[left]+Rarray[right] > 0:
            right -= 1
        elif Farray[left]+Rarray[right] < 0:
            left += 1
        elif Farray[left]+Rarray[right] == 0:
            temp_left = left + 1
            temp_right = right -1
            while temp_left <= max_value-1 and Farray[temp_left] == Farray[left]:
                temp_left += 1
            while temp_right >= 0 and Rarray[temp_right] == Rarray[right]:
                temp_right -= 1
            result += (temp_left - left) * (right - temp_right)
            left = temp_left
            right = temp_right
           
    print(f'{result}')

Number = int(input())

Array =[list(map(int, input().rstrip().split())) for _ in range(Number)]

Make_Array()
Find_Answer()
